// NOTE: This code for TINKERCAD only! This hardcodes values to check the EEPROM reading loop.
// Remove the EEPROM.write() statements from void setup() to use for actual testing

//Library for running liquid crystal display
#include <LiquidCrystal.h> 

//Library for EEPROM (internal memory)
#include <EEPROM.h>

// Pin assignments
LiquidCrystal lcd(8,9,10,11,12,13); 
int ledPin = 7;

// Conversion Values
float minDiam = 0;
float maxDiam = 10.5;
float stepDiam = (maxDiam - minDiam)/256;

//Initialize variables
int cell = 0;
int i = 0;

void setup() { 
  
  //Miscellaneous Set-up Things
  lcd.begin(2,16); // Initialize LCD
  lcd.clear();
  pinMode(ledPin, OUTPUT); // Set LED pin to output
  Serial.begin(9600); // Initialize serial monitor (just in case)
  
  // HARDCODING VALUES IN EEPROM !! REMOVE THIS OUTSIDE OF TINKERCAD!!
  EEPROM.write(0,7.5); // Hardcode the main stored values
  EEPROM.write(1,8.5);
  EEPROM.write(2,15);
  
  for(i = 3; i<=14; i++) {
    EEPROM.write(i,i*250/14); // Make up some manually stored values
  }
  i = 0; // Reset used variable
  
  // Read in Cell value
  cell = EEPROM.read(2); // This is the value of what cell would be written to next
}

void loop() { // Main loop  
  
  if(i == 0){ // Prevents reading in all the values over and over again
  	lcd.setCursor(3,0); // Display start message
  	lcd.print("Reading in");
  	lcd.setCursor(0,1);
  	lcd.print("Recorded Values!");
    delay(2000);
    lcd.clear();
  
  digitalWrite(ledPin,HIGH); // Turn on LED indicator
  
  int cellLength = cell-1; // Find last cell written to
  Serial.println(cellLength);
    
    
  int valByte[cellLength-3]; // Initialize proper length of arrays
  float valDiam[cellLength-3];
  
  for (int k = 3; k<= cellLength; k++) { // Go through all cells where diameter measurements can be stored
    valByte[k] = EEPROM.read(k); // Read in value
    valDiam[k] = valByte[k]*stepDiam + minDiam; // Convert to mm
    Serial.println(valDiam[k]); // Print to serial monitor
    }
  }
  
  i++; // Increment so that cannot run again

  // Loops forever
  digitalWrite(ledPin,LOW); // Turn off LED indicator
  lcd.setCursor(3,0); // Print completion message
  lcd.print("Collection");
  lcd.setCursor(4,1);
  lcd.print("Complete!");
 
}
